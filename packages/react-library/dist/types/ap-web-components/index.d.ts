/// <reference types="react" />
import type { JSX } from 'ap-web-components';
export declare const ApAccordion: import("react").ForwardRefExoticComponent<JSX.ApAccordion & Omit<import("react").HTMLAttributes<HTMLApAccordionElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApAccordionElement>>;
export declare const ApAccordionItem: import("react").ForwardRefExoticComponent<JSX.ApAccordionItem & Omit<import("react").HTMLAttributes<HTMLApAccordionItemElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApAccordionItemElement>>;
export declare const ApAlert: import("react").ForwardRefExoticComponent<JSX.ApAlert & Omit<import("react").HTMLAttributes<HTMLApAlertElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApAlertElement>>;
export declare const ApBadge: import("react").ForwardRefExoticComponent<JSX.ApBadge & Omit<import("react").HTMLAttributes<HTMLApBadgeElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApBadgeElement>>;
export declare const ApBreadcrumb: import("react").ForwardRefExoticComponent<JSX.ApBreadcrumb & Omit<import("react").HTMLAttributes<HTMLApBreadcrumbElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApBreadcrumbElement>>;
export declare const ApButton: import("react").ForwardRefExoticComponent<JSX.ApButton & Omit<import("react").HTMLAttributes<HTMLApButtonElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApButtonElement>>;
export declare const ApCheckbox: import("react").ForwardRefExoticComponent<JSX.ApCheckbox & Omit<import("react").HTMLAttributes<HTMLApCheckboxElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApCheckboxElement>>;
export declare const ApDropdown: import("react").ForwardRefExoticComponent<JSX.ApDropdown & Omit<import("react").HTMLAttributes<HTMLApDropdownElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApDropdownElement>>;
export declare const ApErrorText: import("react").ForwardRefExoticComponent<JSX.ApErrorText & Omit<import("react").HTMLAttributes<HTMLApErrorTextElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApErrorTextElement>>;
export declare const ApExpand: import("react").ForwardRefExoticComponent<JSX.ApExpand & Omit<import("react").HTMLAttributes<HTMLApExpandElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApExpandElement>>;
export declare const ApFieldset: import("react").ForwardRefExoticComponent<JSX.ApFieldset & Omit<import("react").HTMLAttributes<HTMLApFieldsetElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApFieldsetElement>>;
export declare const ApGrid: import("react").ForwardRefExoticComponent<JSX.ApGrid & Omit<import("react").HTMLAttributes<HTMLApGridElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApGridElement>>;
export declare const ApHeading: import("react").ForwardRefExoticComponent<JSX.ApHeading & Omit<import("react").HTMLAttributes<HTMLApHeadingElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApHeadingElement>>;
export declare const ApIcon: import("react").ForwardRefExoticComponent<JSX.ApIcon & Omit<import("react").HTMLAttributes<HTMLApIconElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApIconElement>>;
export declare const ApInput: import("react").ForwardRefExoticComponent<JSX.ApInput & Omit<import("react").HTMLAttributes<HTMLApInputElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApInputElement>>;
export declare const ApLabel: import("react").ForwardRefExoticComponent<JSX.ApLabel & Omit<import("react").HTMLAttributes<HTMLApLabelElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApLabelElement>>;
export declare const ApLink: import("react").ForwardRefExoticComponent<JSX.ApLink & Omit<import("react").HTMLAttributes<HTMLApLinkElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApLinkElement>>;
export declare const ApModal: import("react").ForwardRefExoticComponent<JSX.ApModal & Omit<import("react").HTMLAttributes<HTMLApModalElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApModalElement>>;
export declare const ApParagraph: import("react").ForwardRefExoticComponent<JSX.ApParagraph & Omit<import("react").HTMLAttributes<HTMLApParagraphElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApParagraphElement>>;
export declare const ApRadio: import("react").ForwardRefExoticComponent<JSX.ApRadio & Omit<import("react").HTMLAttributes<HTMLApRadioElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApRadioElement>>;
export declare const ApSegmentedButtons: import("react").ForwardRefExoticComponent<JSX.ApSegmentedButtons & Omit<import("react").HTMLAttributes<HTMLApSegmentedButtonsElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApSegmentedButtonsElement>>;
export declare const ApSplitButton: import("react").ForwardRefExoticComponent<JSX.ApSplitButton & Omit<import("react").HTMLAttributes<HTMLApSplitButtonElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApSplitButtonElement>>;
export declare const ApSpoiler: import("react").ForwardRefExoticComponent<JSX.ApSpoiler & Omit<import("react").HTMLAttributes<HTMLApSpoilerElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApSpoilerElement>>;
export declare const ApSwitch: import("react").ForwardRefExoticComponent<JSX.ApSwitch & Omit<import("react").HTMLAttributes<HTMLApSwitchElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApSwitchElement>>;
export declare const ApTabs: import("react").ForwardRefExoticComponent<JSX.ApTabs & Omit<import("react").HTMLAttributes<HTMLApTabsElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApTabsElement>>;
export declare const ApTooltip: import("react").ForwardRefExoticComponent<JSX.ApTooltip & Omit<import("react").HTMLAttributes<HTMLApTooltipElement>, "style"> & import("./react-component-lib/interfaces").StyleReactProps & import("react").RefAttributes<HTMLApTooltipElement>>;
